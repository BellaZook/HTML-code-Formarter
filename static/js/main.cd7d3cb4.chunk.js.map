{"version":3,"sources":["components/Header.js","components/DisplayCode/index.js","code-formatter/helpers/splitStringIntoArrayOfStrings.js","code-formatter/helpers/addListTagToStartAndEndOfString.js","components/tabs/CssClass/DisplayStyle.js","components/tabs/CssClass/index.js","components/radio/RadioButton.js","components/radio/index.js","components/tabs/Button.js","components/tabs/ColorButton.js","components/tabs/Format/MapColorButtons.js","components/tabs/Format/index.js","components/tabs/Instructions/index.js","components/tabs/Start/Checkbox.js","components/tabs/Start/RadioStart.js","components/tabs/Start/index.js","components/tabs/TabButton.js","components/tabs/index.js","code-formatter/helpers/constants.js","code-formatter/helpers/setRowStatEndTags.js","code-formatter/helpers/getReplacementText.js","code-formatter/index.js","components/page/index.js","app/App.js","app/serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","memo","_ref","displayCode","displayCodeString","dangerouslySetInnerHTML","__html","splitStringIntoArrayOfStrings","str","split","addListTagToStartAndEndOfString","rowStartWith","rowEndWith","concat","DisplayStyle","style","listStyleType","CssClass","activeTab","id","display","margin","CssClass_DisplayStyle","RadioButton","title","selectedRadio","onChange","radioName","type","name","value","checked","RadioButtons","radioFormat","handleRadioChange","radio_RadioButton","Button","color","onClick","ColorButton","tabs_Button","handleAddColor","buttonColors","map","item","tabs_ColorButton","key","e","Format","components_radio","Format_MapColorButtons","Instructions","Checkbox","RadioStart","radioJSX","radioStyle","Start_Checkbox","Start","handleSubmit","handleReset","Start_RadioStart","TabButton","handleSetActiveTab","tabName","event","Tabs","Fragment","tabs_TabButton","tabs_Start","tabs_Format","tabs_CssClass","tabs_Instructions","HTML_LESS_THAN","HTML_SLASH","UL_TAG","UL_TAG_JSX","setRowStartEndTags","selectedString","UlTag","startsWith","endsWith","length","getReplacementText","selectedText","classNameStyle","textAreaReplacement","CodeFormatter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","target","isReadOnly","codePreview","findAndReplace","formatedStrings","stringToBeModified","state","arrayOfStrings","numberOfLinesToFormat","index","replaceSlashes","trim","replace","rowStartEndTags","modString","joinString","join","formatedStringTextArea","formatedStringDisplay","setupDisplay","stringValue","preventDefault","_this$state","txtArea","document","getElementById","selectedTextStartIndex","selectionStart","selectedTextEndIndex","selectionEnd","substring","textAreaValue","codePreviewValue","changeEvent","targetValue","stateObject","defineProperty","handleChange","bind","assertThisInitialized","formatedString","textAreaCode","components_tabs","readOnly","placeholder","width","DisplayCode","Component","Page","children","App","components_Header","components_page","code_formatter_CodeFormatter","Boolean","window","location","hostname","match","ReactDOM","render","app_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd7d3cb4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <h1>HTML Code Formatter</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst DisplayFormattedCode = ({ displayCodeString }) => {\r\n    let displayCode;\r\n    if (displayCodeString) {\r\n        displayCode = displayCodeString;\r\n    }\r\n    else {\r\n        displayCode = \"<span>Paste your code in the text area, then click on the convert button.</span>\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"margin-md\">\r\n            <h2 className=\"text-center\">Preview</h2>\r\n            <br />\r\n            <div className=\"code\">\r\n                <div dangerouslySetInnerHTML={{ __html: displayCode }} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(DisplayFormattedCode);\r\n\r\n","\r\nconst splitStringIntoArrayOfStrings = (str) => {\r\n    return str.split(/(?:\\r|\\n|\\r\\n)/g);\r\n}\r\n\r\nexport default splitStringIntoArrayOfStrings;","const addListTagToStartAndEndOfString = (str, rowStartWith, rowEndWith) => {\r\n    return rowStartWith.concat(str, rowEndWith);\r\n}\r\n\r\nexport default addListTagToStartAndEndOfString;","import React from 'react';\r\n\r\nconst DisplayStyle = () => {\r\n    return (\r\n        <div className=\"code\">\r\n            <ul style={{ listStyleType: 'none' }}>\r\n                <li>.code &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>background-color: #011627;</li>\r\n                        <li>color: white;</li>\r\n                        <li>padding: 20px 10px;</li>\r\n                        <li>margin: 5px 0;</li>\r\n                        <li>border-radius: 20px;</li>\r\n                        <li>font-family: Consolas, Monaco, Menlo, Consolas, monospace;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.c-82aaff &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>color: #82aaff;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.bg-82aaff &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>background-color: #82aaff;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.c-ffa7c4 &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>color: #ffa7c4;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.bg-ffa7c4 &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>background-color: #ffa7c4;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.c-809393 &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>color: #809393;</li>\r\n                    </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.bg-809393 &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>background-color: #809393;</li> </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.c-ffcb8b &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>color: #ffcb8b;</li> </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.bg-ffcb8b &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>background-color: #ffcb8b;</li> </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n\r\n                <li>.f-bold &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>font-weight: bold;</li> </ul>\r\n                    }</li>\r\n                <li><br /></li>\r\n                <li>.bd-color &#123;\r\n                <ul style={{ listStyleType: 'none' }}>\r\n                        <li>border: solid;</li>\r\n                        <li>padding: 0 1px;</li> </ul>\r\n                    }</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayStyle;","import React from 'react';\r\nimport DisplayStyle from './DisplayStyle';\r\n\r\nconst CssClass = ({ activeTab }) => {\r\n    return (\r\n        <div id=\"css\" className=\"tabContent\" style={{ display: activeTab === 'CSS' ? \"block\" : \"none\" }}>\r\n            <h2 style={{ margin: 0 }}>CSS Code</h2>\r\n            <p style={{ margin: 0 }}>Copy and paste into your style sheet.</p>\r\n\r\n            <DisplayStyle />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CssClass;","import React from 'react';\r\nimport './radio.css';\r\n\r\nconst RadioButton = ({ title, selectedRadio, onChange, radioName }) => {\r\n    // console.log('button ', selectedRadio)\r\n\r\n    return (\r\n        <label className=\"radio\">{title}\r\n            <input\r\n                type=\"radio\" name={radioName}\r\n                value={title}\r\n                checked={selectedRadio === title}\r\n                onChange={onChange}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n\r\n    );\r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport './radio.css';\r\nimport RadioButton from './RadioButton';\r\n\r\nconst RadioButtons = ({ radioFormat, handleRadioChange }) => {\r\n    // console.log('radio format ', radioFormat)\r\n    return (\r\n        <div className=\"flexContainer margin-sm\">\r\n            <RadioButton\r\n                title=\"Color\" selectedRadio={radioFormat}\r\n                onChange={handleRadioChange}\r\n                radioName=\"radioFormat\"\r\n            />\r\n            <RadioButton\r\n                title=\"Border\" selectedRadio={radioFormat}\r\n                onChange={handleRadioChange}\r\n                radioName=\"radioFormat\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioButtons;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Button = ({ name, className, color, onClick }) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={`${className} ${color} btn`}\r\n            onClick={onClick}\r\n        >\r\n            {name}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button';\r\n\r\nconst ColorButton = ({ color, onClick }) => {\r\n    return (\r\n        <Button\r\n            color={`bg-${color}`}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n}\r\n\r\nColorButton.propTypes = {\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ColorButton;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport buttonColors from \"./colorButtons.json\";\r\nimport ColorButton from '../ColorButton.js';\r\n\r\nconst MapColorButtons = ({ handleAddColor }) => {\r\n    return buttonColors.map((item) => {\r\n        return <ColorButton key={item.color} color={item.color} onClick={(e) => handleAddColor(e, item.color)} />\r\n    })\r\n}\r\n\r\nMapColorButtons.propTypes = {\r\n    handleAddColor: PropTypes.func.isRequired\r\n}\r\n\r\nexport default React.memo(MapColorButtons);\r\n","import React from 'react';\r\nimport RadioButtons from '../../radio';\r\nimport MapColorButtons from './MapColorButtons';\r\n\r\nconst Format = ({ radioFormat, handleRadioChange, handleAddColor, activeTab }) => {\r\n    return (\r\n        <div id=\"menu\" className=\"tabContent\" style={{ display: activeTab === 'Format' ? \"block\" : \"none\" }}>\r\n            <p style={{ margin: 0 }}>Select some text, then click to change the text color</p>\r\n            <div className=\"flexContainer flex-vertical flex-warp\">\r\n                <RadioButtons\r\n                    radioFormat={radioFormat}\r\n                    handleRadioChange={handleRadioChange}\r\n                />\r\n                <div className=\"flexContainer flex-horizontal flex-warp\">\r\n                    <MapColorButtons handleAddColor={handleAddColor} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Format;","import React from 'react';\r\n\r\nconst Instructions = ({ activeTab }) => {\r\n    return (\r\n        <div id=\"instructions\" className=\"tabContent\" style={{ display: activeTab === 'Instructions' ? \"block\" : \"none\" }}>\r\n            <p style={{ margin: 0 }}>Tip:</p>\r\n            <ol><li>Go from right to left.</li></ol>\r\n            <p>Instructions</p>\r\n            <ol>\r\n                <li>Paste your code inside the text area.</li>\r\n                <li>Click on the \"Convert\" button below the text area</li>\r\n                <li>Select a word to color or add a border around it</li>\r\n                <li>Select the appropriate radio buttons</li>\r\n                <li>Click on the desired color button</li>\r\n            </ol>\r\n            <p>To Do:</p>\r\n            <ul>\r\n                <li>Add svg buttons or image, to save space</li>\r\n                <li>Add tool tip for svg button or image</li>\r\n                <li>Add word and list radio buttons instead of a tab</li>\r\n                <li>Add undo redo button</li>\r\n                <li>Add ability to insert a number in a circle (1,2,3)</li>\r\n                <li>Add inline stile with JSX, currently JSX only work with class</li>\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Instructions;","import React from 'react';\r\n\r\nconst Checkbox = ({ title, onChange, radioName }) => {\r\n    return (\r\n        <label className=\"radio\">{title}\r\n            <input\r\n                type=\"checkbox\"\r\n                value={title}\r\n                name={radioName}\r\n                onClick={onChange}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport RadioButton from '../../radio/RadioButton';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst RadioStart = ({ radioJSX, radioStyle, handleRadioChange }) => {\r\n    // console.log(selectedRadio, handleRadioChange)\r\n    return (\r\n        <div className=\"flexContainer margin-sm\">\r\n            <RadioButton\r\n                title=\"Style\" selectedRadio={radioStyle}\r\n                onChange={handleRadioChange}\r\n                radioName=\"radioStyle\"\r\n            />\r\n            <RadioButton\r\n                title=\"Class\" selectedRadio={radioStyle}\r\n                onChange={handleRadioChange}\r\n                radioName=\"radioStyle\"\r\n            />\r\n            <Checkbox\r\n                title=\"JSX\" selectedRadio={radioJSX}\r\n                onChange={handleRadioChange}\r\n                radioName=\"radioJSX\"\r\n            />\r\n            <span>(class only)</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioStart;\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '../Button';\r\nimport RadioStart from './RadioStart';\r\n\r\nfunction Start({\r\n    handleRadioChange, handleSubmit,\r\n    handleReset, activeTab, radioJSX, radioStyle,\r\n\r\n}) {\r\n\r\n    return (\r\n        <div id=\"start\" className=\"tabContent\" style={{ display: activeTab === 'Start' ? \"block\" : \"none\" }}>\r\n            <p style={{ margin: 0 }}>Select some text, then click to change the text color</p>\r\n            <div className=\"flexContainer flex-vertical flex-warp\">\r\n                <RadioStart\r\n                    radioJSX={radioJSX}\r\n                    radioStyle={radioStyle}\r\n                    handleRadioChange={handleRadioChange}\r\n                />\r\n                <div className=\"flexContainer flex-horizontal flex-warp\">\r\n                    <Button name=\"Convert\" color=\"color-black\" onClick={(e) => handleSubmit()} />\r\n                    <Button name=\"Reset\" color=\"color-black\" onClick={(e) => handleReset()} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Start;","import React from 'react';\r\n\r\nconst TabButton = ({ handleSetActiveTab, activeTab, tabName }) => {\r\n    return (\r\n        <button\r\n            className={`tablinks ${activeTab === tabName && 'active'}`}\r\n            value={tabName}\r\n            onClick={(event) => handleSetActiveTab(event, tabName)}\r\n            id=\"defaultOpen\"\r\n        >\r\n            {tabName}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default TabButton;","import React from 'react';\r\nimport './tabs.css';\r\nimport CssClass from './CssClass';\r\nimport Format from './Format';\r\nimport Instructions from './Instructions';\r\nimport Start from './Start';\r\nimport TabButton from './TabButton';\r\n\r\nconst Tabs = ({\r\n    handleSetActiveTab, activeTab, handleReset,\r\n    handleRadioChange, handleAddColor, handleSubmit,\r\n    radioFormat, radioJSX, radioStyle\r\n\r\n}) => {\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"tab tab-border\">\r\n                <TabButton\r\n                    handleSetActiveTab={handleSetActiveTab}\r\n                    activeTab={activeTab}\r\n                    tabName='Start'\r\n                />\r\n                <TabButton\r\n                    handleSetActiveTab={handleSetActiveTab}\r\n                    activeTab={activeTab}\r\n                    tabName='Format'\r\n                />\r\n                <TabButton\r\n                    handleSetActiveTab={handleSetActiveTab}\r\n                    activeTab={activeTab}\r\n                    tabName='CSS'\r\n                />\r\n                <TabButton\r\n                    handleSetActiveTab={handleSetActiveTab}\r\n                    activeTab={activeTab}\r\n                    tabName='Instructions'\r\n                />\r\n                <button\r\n                    className=\"bg-pink\"\r\n                    onClick={handleReset}\r\n                >\r\n                    Reset\r\n                </button>\r\n\r\n            </div>\r\n            <Start\r\n                activeTab={activeTab}\r\n                handleRadioChange={handleRadioChange}\r\n                handleAddColor={handleAddColor}\r\n                handleSubmit={handleSubmit}\r\n                handleReset={handleReset}\r\n\r\n                radioJSX={radioJSX}\r\n                radioStyle={radioStyle}\r\n            />\r\n            <Format\r\n                radioFormat={radioFormat}\r\n\r\n                handleRadioChange={handleRadioChange}\r\n                handleAddColor={handleAddColor}\r\n                activeTab={activeTab}\r\n\r\n            />\r\n            <CssClass activeTab={activeTab} />\r\n            <Instructions activeTab={activeTab} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Tabs;\r\n\r\n\r\n// <button className=\"tablinks\" onClick={(event) => this.openCity(event, 'list')}>List</button>\r\n//     <div id=\"list\" className=\"tabcontent\">\r\n//         <p style={{ margin: 0 }}>Select some list tag, then click to change its background color</p>\r\n//         <Button name=\"Red\" color=\"color-red\" />\r\n//         <Button name=\"Blue\" color=\"color-blue\" />\r\n//         <Button name=\"Black\" color=\"color-black\" />\r\n//         <Button name=\"Green\" color=\"color-green\" />\r\n//     </div>\r\n","export const HTML_LESS_THAN = \"&#60;\";\r\nexport const HTML_SLASH = \"&#47;\";\r\nexport const UL_TAG = `<ul style=\"list-style-type:none\">`;\r\nexport const UL_TAG_JSX = `<ul style={{listStyleType:'none'}}>`;","import { HTML_LESS_THAN, HTML_SLASH } from \"./constants\";\r\n\r\nconst setRowStartEndTags = (selectedString, UlTag) => {\r\n    let rowStartWith = \"\";\r\n    let rowEndWith = \"\"\r\n\r\n    switch (true) {\r\n        case selectedString.startsWith(\"}\") || selectedString.startsWith(\")\"):\r\n            // } , )\r\n            rowStartWith = \"</ul>\\n\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.startsWith(HTML_LESS_THAN + HTML_SLASH) && selectedString.endsWith(\">\") && (selectedString.split(HTML_LESS_THAN).length - 1) < 2:\r\n            // </ tag >\r\n            rowStartWith = \"</ul>\\n\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.startsWith(HTML_LESS_THAN) && selectedString.endsWith(\">\") && (selectedString.split(HTML_LESS_THAN).length - 1) > 1:\r\n            // <tag> text </tag>\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.startsWith(HTML_LESS_THAN) && selectedString.endsWith(HTML_SLASH + \">\") && (selectedString.split(HTML_LESS_THAN).length - 1) < 2:\r\n            // <tag/>\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.startsWith(HTML_LESS_THAN) && !selectedString.endsWith(\"/>\") && selectedString.endsWith(\">\"):\r\n            // <tag>\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"\\n\" + UlTag;\r\n            break;\r\n        case selectedString.startsWith(HTML_LESS_THAN) && !selectedString.endsWith(\"/>\") && !selectedString.endsWith(\">\") && selectedString.split(\" \").length === 1:\r\n            // <tag\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"\\n\" + UlTag;\r\n            break;\r\n        case selectedString.startsWith(HTML_SLASH + \">\") && selectedString.endsWith(HTML_SLASH + \">\"):\r\n            //   /> \r\n            rowStartWith = \"</ul>\\n\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.startsWith(\">\") && selectedString.endsWith(\">\"):\r\n            //   >\r\n            rowStartWith = \"</ul>\\n\";\r\n            rowEndWith = \"</li>\\n\" + UlTag;\r\n            break;\r\n\r\n        case selectedString.startsWith(HTML_SLASH + HTML_SLASH):\r\n            // \r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n        case selectedString.endsWith(\"{\") || selectedString.endsWith(\"(\"):\r\n            // text {  or  text (\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"\\n\" + UlTag;\r\n            break;\r\n        default:\r\n            // li\r\n            rowStartWith = \"\\n<li>\";\r\n            rowEndWith = \"</li>\";\r\n            break;\r\n    }\r\n\r\n    return {\r\n        rowStartWith,\r\n        rowEndWith\r\n\r\n    }\r\n}\r\n\r\nexport default setRowStartEndTags;","// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nconst getReplacementText = (radioStyle, radioFormat, radioJSX, selectedText, color) => {\r\n    let classNameStyle = 'class';\r\n    let textAreaReplacement = \"\";\r\n\r\n    if (radioJSX === 'JSX') {\r\n        classNameStyle = 'className';\r\n    }\r\n\r\n    if (radioStyle === 'Style') {\r\n        switch (radioFormat) {\r\n            case 'Color':\r\n                textAreaReplacement = `<span style=\"color:#${color}; font-weight: bold\"> ${selectedText}</span>`;\r\n                break;\r\n            case 'Border':\r\n                textAreaReplacement = `<span style=\"border: solid #${color}; padding: 0 1px\"> ${selectedText}</span>`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    } else {\r\n        switch (radioFormat) {\r\n            case 'Color':\r\n                textAreaReplacement = `<span ${classNameStyle}=\"c-${color} f-bold\"> ${selectedText}</span>`;\r\n                break;\r\n            case 'Border':\r\n                textAreaReplacement = `<span ${classNameStyle}=\"bd-color c-${color}\"> ${selectedText}</span>`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return textAreaReplacement;\r\n}\r\n\r\n// getReplacementText.propTypes = {\r\n\r\n// }\r\n\r\nexport default getReplacementText\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/inline-svg.css\"\r\nimport DisplayFormattedCode from \"../components/DisplayCode\";\r\nimport './styles/styling.css'\r\nimport splitStringIntoArrayOfStrings from \"./helpers/splitStringIntoArrayOfStrings\";\r\nimport addListTagToStartAndEndOfString from \"./helpers/addListTagToStartAndEndOfString\";\r\nimport Tabs from \"../components/tabs\";\r\nimport { HTML_LESS_THAN, HTML_SLASH, UL_TAG_JSX, UL_TAG } from \"./helpers/constants\";\r\nimport setRowStartEndTags from \"./helpers/setRowStatEndTags\";\r\nimport getReplacementText from \"./helpers/getReplacementText\";\r\n\r\nexport default class CodeFormatter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.findAndReplace = this.findAndReplace.bind(this);\r\n        this.handleAddColor = this.handleAddColor.bind(this);\r\n        this.handleRadioChange = this.handleRadioChange.bind(this);\r\n\r\n        this.state = {\r\n            value: '',\r\n            radioFormat: 'Color',\r\n            radioJSX: '',\r\n            radioStyle: 'Style',\r\n\r\n            formatedString: '',\r\n            isReadOnly: false,\r\n            activeTab: 'Start',\r\n\r\n            textAreaCode: '',\r\n            codePreview: '',\r\n        };\r\n    }\r\n\r\n    handleSetActiveTab = (event) => {\r\n        this.setState({\r\n            activeTab: event.target.value\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.findAndReplace();\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState(() => {\r\n            return {\r\n                isReadOnly: false,\r\n                value: '',\r\n                activeTab: 'Start',\r\n                codePreview: \"\"\r\n            }\r\n        })\r\n    }\r\n\r\n    findAndReplace = () => {\r\n        let formatedStrings = [];\r\n        let selectedString = \"\";\r\n        let UlTag = \"\";\r\n        const stringToBeModified = this.state.value;\r\n        const arrayOfStrings = splitStringIntoArrayOfStrings(stringToBeModified);\r\n        const numberOfLinesToFormat = arrayOfStrings.length;\r\n\r\n        if (this.state.value) {\r\n            // make read only for security\r\n            this.setState(() => {\r\n                return {\r\n                    isReadOnly: true,\r\n                    activeTab: 'Format'\r\n                }\r\n            })\r\n\r\n            if (this.state.radioJSX === 'JSX') {\r\n                UlTag = UL_TAG_JSX;\r\n            } else {\r\n                UlTag = UL_TAG;\r\n            }\r\n\r\n            for (let index = 0; index < numberOfLinesToFormat; index++) {\r\n\r\n                selectedString = arrayOfStrings[index].trim();\r\n                const replaceSlashes = selectedString.replace(/\\//g, HTML_SLASH);\r\n                selectedString = replaceSlashes.replace(/</g, HTML_LESS_THAN);\r\n\r\n                const rowStartEndTags = setRowStartEndTags(selectedString, UlTag);\r\n                let modString = addListTagToStartAndEndOfString(selectedString, rowStartEndTags.rowStartWith, rowStartEndTags.rowEndWith)\r\n                selectedString = modString;\r\n\r\n                modString = selectedString.replace(\"{\", \"&#123;\");\r\n                selectedString = modString;\r\n\r\n                formatedStrings[index] = selectedString;\r\n            }\r\n\r\n            let joinString = formatedStrings.join(' ');\r\n\r\n            const formatedStringTextArea = `${UlTag}${joinString}\\n</ul>`;\r\n            const formatedStringDisplay = `<ul style=\"list-style-type:none\">${joinString}\\n</ul>`\r\n\r\n            this.setupDisplay(formatedStringDisplay);\r\n\r\n            this.setState(() => { return { value: formatedStringTextArea }; });\r\n        }\r\n    }\r\n\r\n    setupDisplay = (stringValue) => {\r\n        this.setState({ codePreview: stringValue });\r\n    }\r\n\r\n    handleAddColor = (event, color) => {\r\n        event.preventDefault();\r\n        const { radioStyle, radioFormat, radioJSX } = this.state\r\n        const txtArea = document.getElementById(\"codeTextarea\");\r\n        const selectedTextStartIndex = txtArea.selectionStart;\r\n        const selectedTextEndIndex = txtArea.selectionEnd;\r\n        const selectedText = txtArea.value.substring(selectedTextStartIndex, selectedTextEndIndex);\r\n\r\n        const textAreaReplacement = getReplacementText(radioStyle, radioFormat, radioJSX, selectedText, color);\r\n\r\n        const beforeSelectedText = txtArea.value.substring(0, selectedTextStartIndex);;\r\n        const afterSelectedText = txtArea.value.substring(selectedTextEndIndex);;\r\n\r\n        const textAreaValue = beforeSelectedText + textAreaReplacement + afterSelectedText;\r\n        let codePreviewValue = \"\";\r\n\r\n        if (this.state.radioJSX === 'JSX') {\r\n            codePreviewValue = textAreaValue.replace(/<span className=/g, \"<span class=\");\r\n        } else {\r\n            codePreviewValue = textAreaValue;\r\n        }\r\n\r\n        this.setState(() => {\r\n            return {\r\n                value: textAreaValue,\r\n                codePreview: codePreviewValue\r\n            }\r\n        });\r\n    }\r\n\r\n    handleRadioChange = (changeEvent) => {\r\n        let targetValue = changeEvent.target.value;\r\n        if (targetValue === 'JSX' && this.state.radioJSX === 'JSX') {\r\n            targetValue = '';\r\n        }\r\n        if (targetValue === 'JSX' && this.state.radioJSX !== 'JSX') {\r\n            this.setState({ radioStyle: \"Class\" })\r\n        }\r\n\r\n        const stateObject = { [changeEvent.target.name]: targetValue }\r\n        this.setState(stateObject);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flexContainer flex-warp\">\r\n                <div className=\"formatter margin-md\">\r\n                    <h2 className=\"\">Format Javascript Code Using List</h2>\r\n                    <Tabs\r\n                        handleAddColor={this.handleAddColor}\r\n                        selectedRadio={this.state.selectedRadio}\r\n                        handleRadioChange={this.handleRadioChange}\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleReset={this.handleReset}\r\n                        handleSetActiveTab={this.handleSetActiveTab}\r\n                        activeTab={this.state.activeTab}\r\n\r\n                        radioFormat={this.state.radioFormat}\r\n                        radioJSX={this.state.radioJSX}\r\n                        radioStyle={this.state.radioStyle}\r\n                    />\r\n                    <div className=\"formatter margin-top-sm\" >\r\n                        <textarea\r\n                            readOnly={this.state.isReadOnly}\r\n                            name=\"text\" id=\"codeTextarea\"\r\n                            className=\"texArea-height\"\r\n                            placeholder=\"Paste your code inside\"\r\n                            style={{ width: \"100%\" }} value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                <DisplayFormattedCode displayCodeString={this.state.codePreview} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './styles/page.css';\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <div className={`flexContainer ${props.className ? props.className : \"\"}`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;","import React, { Component } from 'react';\r\nimport '../style/App.css';\r\nimport Header from '../components/Header';\r\nimport CodeFormatter from '../code-formatter';\r\nimport Page from '../components/page';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Page className=\" flex-vertical\">\r\n          <CodeFormatter />\r\n        </Page>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './app/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}